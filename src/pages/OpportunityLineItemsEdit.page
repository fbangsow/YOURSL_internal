<apex:page showHeader="true" sidebar="false" standardController="Opportunity" extensions="OpportunityLineItemsEditExtension">
    <apex:sectionHeader title="Edit Sales Price And Quantity for {!Opportunity.Name}"/>
    <apex:pageMessages id="message"/>
    <apex:form >
        <apex:pageBlock >
            <apex:pageBlockSection >
                <apex:dataTable value="{!SelectedOpportunity.OpportunityLineItems}" var="LineItem" border="1" cellpadding="10" width="900px" id="theTable">
                    <apex:column >
                        <apex:facet name="header">Resource</apex:facet>
                        <apex:outputText value="{!LineItem.Contact__r.Name}"/>
                        <apex:facet name="footer">
                            <b>Totals</b>
                        </apex:facet>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Product Name</apex:facet>
                        <apex:outputText value="{!LineItem.Product2.Name}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Service Date</apex:facet>
                        <apex:outputText value="{!CASE(MONTH(LineItem.ServiceDate),1, "January",2, "February",3, "March", 4, "April", 5, "May", 6, 
                "June",7, "July",8, "August",9, "September",10, "October",11, "November",12, "December","None")} {!YEAR(LineItem.ServiceDate)}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Sales Price</apex:facet>
                        <apex:outputText value="{0, number, ###,###,###,###.00} €" id="unitPrice">
                            <apex:param value="{!LineItem.UnitPrice}"/>
                        </apex:outputText>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Quantity</apex:facet>
                        <apex:inputText value="{!LineItem.Quantity}" onKeyUp="recountTotal('{!$Component.theTable.revenueAfter}', document.getElementById('{!$Component.theTable.unitPrice}').innerText, this.value);recountGlobalTotal('{!$Component.theTable.totalRevenueAfter}', '{!$Component.theTable}');" id="quantity"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Revenue before</apex:facet>
                        <apex:outputText value="{0, number, ###,###,###,###.00} €">
                            <apex:param value="{!LineItem.Quantity*LineItem.UnitPrice}"/>
                        </apex:outputText>
                        <apex:facet name="footer">
                            <apex:outputText value="{0, number, ###,###,###,###.00} €">
                                <apex:param value="{!TotalRevenueBefore}"/>
                            </apex:outputText>
                        </apex:facet>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Revenue after</apex:facet>
                        <apex:outputText value="{0, number, ###,###,###,###.00} €" id="revenueAfter" styleClass="revenueAfter">
                            <apex:param value="{!LineItem.Quantity*LineItem.UnitPrice}"/>
                        </apex:outputText>
                        <apex:facet name="footer">
                            <apex:outputText value="{0, number, ###,###,###,###.00} €" id="totalRevenueAfter">
                                <apex:param value="{!TotalRevenueBefore}"/>
                            </apex:outputText>
                        </apex:facet>
                    </apex:column>
                </apex:dataTable>
            </apex:pageBlockSection>
        </apex:pageBlock>
    </apex:form>
    <script>
        function recountTotal(id, unitPrice, quantity){
            if(!isNumber(quantity)){
                document.getElementById(id).innerText = 'Hard to count. Please, use period for separating decimals!';
            }
            else
                document.getElementById(id).innerText = (parseFloat(unitPrice.replace(',',''))*quantity).formatMoney(2, ',', '.') + '€';
        }

        function recountGlobalTotal(id_to_update, tableId){
            var tableElem = window.document.getElementById(tableId.substring(0, tableId.lastIndexOf(":")));
            var tableBody = tableElem.getElementsByTagName("tbody").item(0);
            var i;
            var howManyRows = tableBody.rows.length;
            for (i=1; i<(howManyRows-1); i++){
               var thisTrElem = tableBody.rows[i];
               var thisTdElem = thisTrElem.cells[thisTrElem.cells.length];
               var thisTextNode = thisTdElem.childNodes.item(0);
               var thisNumber = parseFloat(thisTextNode.data);
               // if you didn't get back the value NaN (i.e. not a number), add into result
               if (!isNaN(thisNumber))
                 result += thisNumber;
             }
            document.getElementById(id_to_update).innerText = parseFloat(result).formatMoney(2, ',', '.') + '€';
        }

        function isNumber(n) {
            return !isNaN(parseFloat(n)) && isFinite(n);
        }

        Number.prototype.formatMoney = function(decPlaces, thouSeparator, decSeparator) {
            var n = this,
            decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces,
            decSeparator = decSeparator == undefined ? "." : decSeparator,
            thouSeparator = thouSeparator == undefined ? "," : thouSeparator,
            sign = n < 0 ? "-" : "",
            i = parseInt(n = Math.abs(+n || 0).toFixed(decPlaces)) + "",
            j = (j = i.length) > 3 ? j % 3 : 0;
            return sign + (j ? i.substr(0, j) + thouSeparator : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thouSeparator) + (decPlaces ? decSeparator + Math.abs(n - i).toFixed(decPlaces).slice(2) : "");
        };
    </script>
</apex:page>